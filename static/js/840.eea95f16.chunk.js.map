{"version":3,"file":"static/js/840.eea95f16.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactForm.jsx","components/Filter.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/ContactsWrapper.jsx","components/ErrorComponent.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","export const selectFilter = state => state.filter;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport { addContact } from '../redux/contacts/operations';\nimport { Box, Button, TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [state, setState] = useState({ name: '', number: '' });\n\n  const checkNameForRepeat = contactName => {\n    return contacts.some(\n      ({ name }) => name.toLowerCase() === contactName.toLowerCase()\n    );\n  };\n\n  const handleAddContact = obj => {\n    if (!state.name || !state.number) {\n      Notiflix.Notify.warning(`Something missed`, {\n        position: 'center-top',\n        distance: '100px',\n        fontSize: '40px',\n        width: '600px',\n      });\n      return;\n    }\n    if (checkNameForRepeat(obj.name)) {\n      Notiflix.Notify.warning(`${obj.name} is already in contacts`, {\n        position: 'center-top',\n        distance: '50px',\n        fontSize: '40px',\n        width: '600px',\n      });\n      return;\n    }\n    dispatch(addContact(obj));\n    setState({ name: '', number: '' });\n  };\n  const createContactObj = e => {\n    e.preventDefault();\n\n    const newContactObj = {\n      ...state,\n      id: nanoid(),\n    };\n\n    handleAddContact(newContactObj);\n  };\n  const handleChange = ({ target: { name, value } }) => {\n    setState(prev => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">Phonebook</h1>\n      <form\n        action=\"submit\"\n        className=\"add-form\"\n        autoComplete=\"on\"\n        onSubmit={createContactObj}\n      >\n        <Box\n          sx={{\n            width: 200,\n          }}\n        >\n          <TextField\n            required\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={state.name}\n            fullWidth\n            name=\"name\"\n            label=\"Name\"\n            variant=\"standard\"\n            onChange={handleChange}\n          />\n\n          <TextField\n            required\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            value={state.number}\n            fullWidth\n            name=\"number\"\n            type=\"tel\"\n            label=\"Number\"\n            variant=\"standard\"\n            onChange={handleChange}\n            style={{ marginBottom: 15 }}\n          />\n        </Box>\n        <Button variant=\"outlined\" color=\"success\" size=\"small\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from '../redux/filter/filterSlice';\nimport { Box, TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(changeFilter(value));\n  };\n  return (\n    <>\n      <h2 className=\"title\">Contacts</h2>\n      <Box\n        sx={{\n          width: 500,\n          maxWidth: '100%',\n        }}\n      >\n        <TextField\n          fullWidth\n          label=\"Find contacts by name\"\n          variant=\"standard\"\n          onChange={handleFilter}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeContact } from '../redux/contacts/operations';\nimport { Box, Button } from '@mui/material';\n\nconst ContactItem = ({ contactData }) => {\n  const dispatch = useDispatch();\n\n  const { id, name, number } = contactData;\n\n  const handleDelete = () => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <li className=\"contacts-item\">\n      <p className=\"contacts-item-name\">\n        {name} :<span className=\"contacts-item-number\">{number}</span>\n      </p>\n      <Box\n        sx={{\n          width: 200,\n          maxWidth: '100%',\n        }}\n      >\n        <Button\n          variant=\"outlined\"\n          fullWidth\n          color=\"error\"\n          size=\"small\"\n          onClick={handleDelete}\n        >\n          Delete contact\n        </Button>\n      </Box>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\nimport ContactItem from './ContactItem';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const reversedContacts = [...filteredContacts].reverse();\n  return isLoading ? (\n    <span className=\"loader2\"></span>\n  ) : (\n    <ul className=\"contacts-list\">\n      {reversedContacts.map(contact => (\n        <ContactItem key={contact.id} contactData={contact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../redux/contacts/selectors.js';\nimport Filter from './Filter.jsx';\nimport ContactList from './ContactList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations.js';\n\nconst ContactsWrapper = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  console.log('contacts', contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <section className=\"contacts-wrapper\">\n      {(contacts.length === 0 && (\n        <h1 style={{ marginTop: 80, fontSize: 44 }}>\n          Ooops... No contacts here\n        </h1>\n      )) || (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default ContactsWrapper;\n","const ErrorComponent = ({ error }) => {\n  return (\n    <div\n      style={{\n        textAlign: 'center',\n        fontSize: 40,\n        marginTop: 250,\n      }}\n    >\n      Ooops... We can't get any contacts\n      <p style={{ marginTop: 30 }}>{error}</p>\n    </div>\n  );\n};\n\nexport default ErrorComponent;\n","import ContactForm from 'components/ContactForm';\nimport React from 'react';\nimport ContactsWrapper from 'components/ContactsWrapper';\nimport { useSelector } from 'react-redux';\nimport { selectError } from '../redux/contacts/selectors';\nimport ErrorComponent from 'components/ErrorComponent';\n\nconst ContactsPage = () => {\n  const error = useSelector(selectError);\n  return error ? (\n    <ErrorComponent error={error} />\n  ) : (\n    <>\n      <ContactForm />\n      <ContactsWrapper />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","dispatch","useDispatch","useSelector","_useState","useState","number","_useState2","_slicedToArray","setState","handleAddContact","obj","contactName","some","_ref","Notiflix","concat","position","distance","fontSize","width","addContact","handleChange","_ref2","_ref2$target","target","value","prev","_objectSpread","_defineProperty","_jsxs","_Fragment","children","_jsx","className","action","autoComplete","onSubmit","e","preventDefault","newContactObj","id","nanoid","Box","sx","TextField","required","pattern","fullWidth","label","variant","onChange","type","style","marginBottom","Button","color","size","maxWidth","changeFilter","contactData","onClick","removeContact","filteredContacts","reversedContacts","_toConsumableArray","reverse","map","ContactItem","console","log","useEffect","fetchContacts","length","marginTop","Filter","ContactList","textAlign","ErrorComponent","ContactForm","ContactsWrapper"],"sourceRoot":""}